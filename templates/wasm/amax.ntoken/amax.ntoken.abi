{
    "____comment": "This file was generated with amax-abigen. DO NOT EDIT ",
    "version": "amax::abi/1.1",
    "types": [],
    "structs": [
        {
            "name": "account_t",
            "base": "",
            "fields": [
                {
                    "name": "balance",
                    "type": "nasset"
                },
                {
                    "name": "paused",
                    "type": "bool"
                }
            ]
        },
        {
            "name": "allowance_t",
            "base": "",
            "fields": [
                {
                    "name": "spender",
                    "type": "name"
                },
                {
                    "name": "allowances",
                    "type": "pair_uint32_uint64[]"
                }
            ]
        },
        {
            "name": "approve",
            "base": "",
            "fields": [
                {
                    "name": "spender",
                    "type": "name"
                },
                {
                    "name": "sender",
                    "type": "name"
                },
                {
                    "name": "token_pid",
                    "type": "uint32"
                },
                {
                    "name": "amount",
                    "type": "uint64"
                }
            ]
        },
        {
            "name": "create",
            "base": "",
            "fields": [
                {
                    "name": "issuer",
                    "type": "name"
                },
                {
                    "name": "maximum_supply",
                    "type": "int64"
                },
                {
                    "name": "symbol",
                    "type": "nsymbol"
                },
                {
                    "name": "token_uri",
                    "type": "string"
                },
                {
                    "name": "ipowner",
                    "type": "name"
                }
            ]
        },
        {
            "name": "global_t",
            "base": "",
            "fields": [
                {
                    "name": "notaries",
                    "type": "name[]"
                }
            ]
        },
        {
            "name": "issue",
            "base": "",
            "fields": [
                {
                    "name": "to",
                    "type": "name"
                },
                {
                    "name": "quantity",
                    "type": "nasset"
                },
                {
                    "name": "memo",
                    "type": "string"
                }
            ]
        },
        {
            "name": "nasset",
            "base": "",
            "fields": [
                {
                    "name": "amount",
                    "type": "int64"
                },
                {
                    "name": "symbol",
                    "type": "nsymbol"
                }
            ]
        },
        {
            "name": "notarize",
            "base": "",
            "fields": [
                {
                    "name": "notary",
                    "type": "name"
                },
                {
                    "name": "token_id",
                    "type": "uint32"
                }
            ]
        },
        {
            "name": "nstats_t",
            "base": "",
            "fields": [
                {
                    "name": "supply",
                    "type": "nasset"
                },
                {
                    "name": "max_supply",
                    "type": "nasset"
                },
                {
                    "name": "token_uri",
                    "type": "string"
                },
                {
                    "name": "ipowner",
                    "type": "name"
                },
                {
                    "name": "notary",
                    "type": "name"
                },
                {
                    "name": "issuer",
                    "type": "name"
                },
                {
                    "name": "issued_at",
                    "type": "time_point_sec"
                },
                {
                    "name": "notarized_at",
                    "type": "time_point_sec"
                },
                {
                    "name": "paused",
                    "type": "bool"
                }
            ]
        },
        {
            "name": "nsymbol",
            "base": "",
            "fields": [
                {
                    "name": "id",
                    "type": "uint32"
                },
                {
                    "name": "parent_id",
                    "type": "uint32"
                }
            ]
        },
        {
            "name": "pair_uint32_uint64",
            "base": "",
            "fields": [
                {
                    "name": "key",
                    "type": "uint32"
                },
                {
                    "name": "value",
                    "type": "uint64"
                }
            ]
        },
        {
            "name": "retire",
            "base": "",
            "fields": [
                {
                    "name": "quantity",
                    "type": "nasset"
                },
                {
                    "name": "memo",
                    "type": "string"
                }
            ]
        },
        {
            "name": "setipowner",
            "base": "",
            "fields": [
                {
                    "name": "symbid",
                    "type": "uint64"
                },
                {
                    "name": "ip_owner",
                    "type": "name"
                }
            ]
        },
        {
            "name": "setnotary",
            "base": "",
            "fields": [
                {
                    "name": "notary",
                    "type": "name"
                },
                {
                    "name": "to_add",
                    "type": "bool"
                }
            ]
        },
        {
            "name": "transfer",
            "base": "",
            "fields": [
                {
                    "name": "from",
                    "type": "name"
                },
                {
                    "name": "to",
                    "type": "name"
                },
                {
                    "name": "assets",
                    "type": "nasset[]"
                },
                {
                    "name": "memo",
                    "type": "string"
                }
            ]
        },
        {
            "name": "transferfrom",
            "base": "",
            "fields": [
                {
                    "name": "owner",
                    "type": "name"
                },
                {
                    "name": "from",
                    "type": "name"
                },
                {
                    "name": "to",
                    "type": "name"
                },
                {
                    "name": "assets",
                    "type": "nasset[]"
                },
                {
                    "name": "memo",
                    "type": "string"
                }
            ]
        }
    ],
    "actions": [
        {
            "name": "approve",
            "type": "approve",
            "ricardian_contract": ""
        },
        {
            "name": "create",
            "type": "create",
            "ricardian_contract": "---\nspec_version: \"0.2.0\"\ntitle: Create New Token\nsummary: 'Create a new token'\nicon: http://127.0.0.1/ricardian_assets/amax.contracts/icons/\n---\n\n{{$action.account}} agrees to create a new token with symbol {{asset_to_symbol_code maximum_supply}} to be managed by {{issuer}}.\n\nThis action will not result any any tokens being issued into circulation.\n\n{{issuer}} will be allowed to issue tokens into circulation, up to a maximum supply of {{maximum_supply}}.\n\nRAM will deducted from {{$action.account}}’s resources to create the necessary records."
        },
        {
            "name": "issue",
            "type": "issue",
            "ricardian_contract": "---\nspec_version: \"0.2.0\"\ntitle: Issue Tokens into Circulation\nsummary: 'Issue {{nowrap quantity}} into circulation and transfer into {{nowrap to}}’s account'\nicon: http://127.0.0.1/ricardian_assets/amax.contracts/icons/\n---\n\nThe token manager agrees to issue {{quantity}} into circulation, and transfer it into {{to}}’s account.\n\n{{#if memo}}There is a memo attached to the transfer stating:\n{{memo}}\n{{/if}}\n\nIf {{to}} does not have a balance for {{asset_to_symbol_code quantity}}, or the token manager does not have a balance for {{asset_to_symbol_code quantity}}, the token manager will be designated as the RAM payer of the {{asset_to_symbol_code quantity}} token balance for {{to}}. As a result, RAM will be deducted from the token manager’s resources to create the necessary records.\n\nThis action does not allow the total quantity to exceed the max allowed supply of the token."
        },
        {
            "name": "notarize",
            "type": "notarize",
            "ricardian_contract": ""
        },
        {
            "name": "retire",
            "type": "retire",
            "ricardian_contract": "---\nspec_version: \"0.2.0\"\ntitle: Remove Tokens from Circulation\nsummary: 'Remove {{nowrap quantity}} from circulation'\nicon: http://127.0.0.1/ricardian_assets/amax.contracts/icons/\n---\n\nThe token manager agrees to remove {{quantity}} from circulation, taken from their own account.\n\n{{#if memo}} There is a memo attached to the action stating:\n{{memo}}\n{{/if}}"
        },
        {
            "name": "setipowner",
            "type": "setipowner",
            "ricardian_contract": ""
        },
        {
            "name": "setnotary",
            "type": "setnotary",
            "ricardian_contract": ""
        },
        {
            "name": "transfer",
            "type": "transfer",
            "ricardian_contract": "---\nspec_version: \"0.2.0\"\ntitle: Transfer Tokens\nsummary: 'Send {{nowrap quantity}} from {{nowrap from}} to {{nowrap to}}'\nicon: http://127.0.0.1/ricardian_assets/amax.contracts/icons/transfer.png#5dfad0df72772ee1ccc155e670c1d124f5c5122f1d5027565df38b418042d1dd\n---\n\n{{from}} agrees to send {{quantity}} to {{to}}.\n\n{{#if memo}}There is a memo attached to the transfer stating:\n{{memo}}\n{{/if}}\n\nIf {{from}} is not already the RAM payer of their {{asset_to_symbol_code quantity}} token balance, {{from}} will be designated as such. As a result, RAM will be deducted from {{from}}’s resources to refund the original RAM payer.\n\nIf {{to}} does not have a balance for {{asset_to_symbol_code quantity}}, {{from}} will be designated as the RAM payer of the {{asset_to_symbol_code quantity}} token balance for {{to}}. As a result, RAM will be deducted from {{from}}’s resources to create the necessary records."
        },
        {
            "name": "transferfrom",
            "type": "transferfrom",
            "ricardian_contract": ""
        }
    ],
    "tables": [
        {
            "name": "accounts",
            "type": "account_t",
            "index_type": "i64",
            "key_names": [],
            "key_types": []
        },
        {
            "name": "allowances",
            "type": "allowance_t",
            "index_type": "i64",
            "key_names": [],
            "key_types": []
        },
        {
            "name": "global",
            "type": "global_t",
            "index_type": "i64",
            "key_names": [],
            "key_types": []
        },
        {
            "name": "tokenstats",
            "type": "nstats_t",
            "index_type": "i64",
            "key_names": [],
            "key_types": []
        }
    ],
    "ricardian_clauses": [],
    "variants": []
}